<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="26" passed="26" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-01-31T22:20:30 IST" name="Unit Test Suite" finished-at="2021-01-31T22:20:30 IST" duration-ms="199">
    <groups>
    </groups>
    <test started-at="2021-01-31T22:20:30 IST" name="Unit Test Cases" finished-at="2021-01-31T22:20:30 IST" duration-ms="199">
      <class name="com.unitTestArithmetic.qa.testcases.AddFunctionTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.AddFunctionTest@1ed6388a]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest1()[pri:0, instance:com.unitTestArithmetic.qa.testcases.AddFunctionTest@1ed6388a]" started-at="2021-01-31T22:20:30 IST" name="addTest1" finished-at="2021-01-31T22:20:30 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest1 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.AddFunctionTest@1ed6388a]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest2()[pri:0, instance:com.unitTestArithmetic.qa.testcases.AddFunctionTest@1ed6388a]" started-at="2021-01-31T22:20:30 IST" name="addTest2" finished-at="2021-01-31T22:20:30 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest2 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.AddFunctionTest@1ed6388a]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest3()[pri:0, instance:com.unitTestArithmetic.qa.testcases.AddFunctionTest@1ed6388a]" started-at="2021-01-31T22:20:30 IST" name="addTest3" finished-at="2021-01-31T22:20:30 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest3 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.AddFunctionTest@1ed6388a]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest4()[pri:0, instance:com.unitTestArithmetic.qa.testcases.AddFunctionTest@1ed6388a]" started-at="2021-01-31T22:20:30 IST" name="addTest4" finished-at="2021-01-31T22:20:30 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest4 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.AddFunctionTest@1ed6388a]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest5()[pri:0, instance:com.unitTestArithmetic.qa.testcases.AddFunctionTest@1ed6388a]" started-at="2021-01-31T22:20:30 IST" name="addTest5" finished-at="2021-01-31T22:20:30 IST" duration-ms="1" status="PASS">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at com.unitTestArithmetic.qa.testcases.AddFunctionTest.addTest5(AddFunctionTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest5 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.AddFunctionTest@1ed6388a]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest6()[pri:0, instance:com.unitTestArithmetic.qa.testcases.AddFunctionTest@1ed6388a]" started-at="2021-01-31T22:20:30 IST" name="addTest6" finished-at="2021-01-31T22:20:30 IST" duration-ms="2" status="PASS">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at com.unitTestArithmetic.qa.testcases.AddFunctionTest.addTest6(AddFunctionTest.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest6 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.AddFunctionTest@1ed6388a]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest7()[pri:0, instance:com.unitTestArithmetic.qa.testcases.AddFunctionTest@1ed6388a]" started-at="2021-01-31T22:20:30 IST" name="addTest7" finished-at="2021-01-31T22:20:30 IST" duration-ms="1" status="PASS">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at com.unitTestArithmetic.qa.testcases.AddFunctionTest.addTest7(AddFunctionTest.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest7 -->
      </class> <!-- com.unitTestArithmetic.qa.testcases.AddFunctionTest -->
      <class name="com.unitTestArithmetic.qa.testcases.DivideFunctionTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.DivideFunctionTest@5a45133e]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest1()[pri:0, instance:com.unitTestArithmetic.qa.testcases.DivideFunctionTest@5a45133e]" started-at="2021-01-31T22:20:30 IST" name="addTest1" finished-at="2021-01-31T22:20:30 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest1 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.DivideFunctionTest@5a45133e]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest2()[pri:0, instance:com.unitTestArithmetic.qa.testcases.DivideFunctionTest@5a45133e]" started-at="2021-01-31T22:20:30 IST" name="addTest2" finished-at="2021-01-31T22:20:30 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest2 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.DivideFunctionTest@5a45133e]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest3()[pri:0, instance:com.unitTestArithmetic.qa.testcases.DivideFunctionTest@5a45133e]" started-at="2021-01-31T22:20:30 IST" name="addTest3" finished-at="2021-01-31T22:20:30 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest3 -->
        <test-method signature="addTest4()[pri:0, instance:com.unitTestArithmetic.qa.testcases.DivideFunctionTest@5a45133e]" started-at="2021-01-31T22:20:30 IST" name="addTest4" finished-at="2021-01-31T22:20:30 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest4 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.DivideFunctionTest@5a45133e]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.DivideFunctionTest@5a45133e]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest5()[pri:0, instance:com.unitTestArithmetic.qa.testcases.DivideFunctionTest@5a45133e]" started-at="2021-01-31T22:20:30 IST" name="addTest5" finished-at="2021-01-31T22:20:30 IST" duration-ms="2" status="PASS">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at com.unitTestArithmetic.qa.testcases.DivideFunctionTest.addTest5(DivideFunctionTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest5 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.DivideFunctionTest@5a45133e]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest6()[pri:0, instance:com.unitTestArithmetic.qa.testcases.DivideFunctionTest@5a45133e]" started-at="2021-01-31T22:20:30 IST" name="addTest6" finished-at="2021-01-31T22:20:30 IST" duration-ms="2" status="PASS">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at com.unitTestArithmetic.qa.testcases.DivideFunctionTest.addTest6(DivideFunctionTest.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest6 -->
        <test-method signature="addTest7()[pri:0, instance:com.unitTestArithmetic.qa.testcases.DivideFunctionTest@5a45133e]" started-at="2021-01-31T22:20:30 IST" name="addTest7" finished-at="2021-01-31T22:20:30 IST" duration-ms="2" status="PASS">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at com.unitTestArithmetic.qa.testcases.DivideFunctionTest.addTest7(DivideFunctionTest.java:61)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest7 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.DivideFunctionTest@5a45133e]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.unitTestArithmetic.qa.testcases.DivideFunctionTest -->
      <class name="com.unitTestArithmetic.qa.testcases.MultiplyFunctionTest">
        <test-method signature="addTest1()[pri:0, instance:com.unitTestArithmetic.qa.testcases.MultiplyFunctionTest@534a5a98]" started-at="2021-01-31T22:20:30 IST" name="addTest1" finished-at="2021-01-31T22:20:30 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest1 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.MultiplyFunctionTest@534a5a98]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.MultiplyFunctionTest@534a5a98]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest2()[pri:0, instance:com.unitTestArithmetic.qa.testcases.MultiplyFunctionTest@534a5a98]" started-at="2021-01-31T22:20:30 IST" name="addTest2" finished-at="2021-01-31T22:20:30 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest2 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.MultiplyFunctionTest@534a5a98]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest3()[pri:0, instance:com.unitTestArithmetic.qa.testcases.MultiplyFunctionTest@534a5a98]" started-at="2021-01-31T22:20:30 IST" name="addTest3" finished-at="2021-01-31T22:20:30 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest3 -->
        <test-method signature="addTest4()[pri:0, instance:com.unitTestArithmetic.qa.testcases.MultiplyFunctionTest@534a5a98]" started-at="2021-01-31T22:20:30 IST" name="addTest4" finished-at="2021-01-31T22:20:30 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest4 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.MultiplyFunctionTest@534a5a98]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest5()[pri:0, instance:com.unitTestArithmetic.qa.testcases.MultiplyFunctionTest@534a5a98]" started-at="2021-01-31T22:20:30 IST" name="addTest5" finished-at="2021-01-31T22:20:30 IST" duration-ms="1" status="PASS">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at com.unitTestArithmetic.qa.testcases.MultiplyFunctionTest.addTest5(MultiplyFunctionTest.java:49)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest5 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.MultiplyFunctionTest@534a5a98]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.unitTestArithmetic.qa.testcases.MultiplyFunctionTest -->
      <class name="com.unitTestArithmetic.qa.testcases.SubtractFunctionTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.SubtractFunctionTest@4f80542f]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest1()[pri:0, instance:com.unitTestArithmetic.qa.testcases.SubtractFunctionTest@4f80542f]" started-at="2021-01-31T22:20:30 IST" name="addTest1" finished-at="2021-01-31T22:20:30 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest1 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.SubtractFunctionTest@4f80542f]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest2()[pri:0, instance:com.unitTestArithmetic.qa.testcases.SubtractFunctionTest@4f80542f]" started-at="2021-01-31T22:20:30 IST" name="addTest2" finished-at="2021-01-31T22:20:30 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest2 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.SubtractFunctionTest@4f80542f]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest3()[pri:0, instance:com.unitTestArithmetic.qa.testcases.SubtractFunctionTest@4f80542f]" started-at="2021-01-31T22:20:30 IST" name="addTest3" finished-at="2021-01-31T22:20:30 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest3 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.SubtractFunctionTest@4f80542f]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest4()[pri:0, instance:com.unitTestArithmetic.qa.testcases.SubtractFunctionTest@4f80542f]" started-at="2021-01-31T22:20:30 IST" name="addTest4" finished-at="2021-01-31T22:20:30 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest4 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.SubtractFunctionTest@4f80542f]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest5()[pri:0, instance:com.unitTestArithmetic.qa.testcases.SubtractFunctionTest@4f80542f]" started-at="2021-01-31T22:20:30 IST" name="addTest5" finished-at="2021-01-31T22:20:30 IST" duration-ms="1" status="PASS">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at com.unitTestArithmetic.qa.testcases.SubtractFunctionTest.addTest5(SubtractFunctionTest.java:50)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest5 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.SubtractFunctionTest@4f80542f]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest6()[pri:0, instance:com.unitTestArithmetic.qa.testcases.SubtractFunctionTest@4f80542f]" started-at="2021-01-31T22:20:30 IST" name="addTest6" finished-at="2021-01-31T22:20:30 IST" duration-ms="1" status="PASS">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at com.unitTestArithmetic.qa.testcases.SubtractFunctionTest.addTest6(SubtractFunctionTest.java:56)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest6 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.unitTestArithmetic.qa.testcases.SubtractFunctionTest@4f80542f]" started-at="2021-01-31T22:20:30 IST" name="setup" finished-at="2021-01-31T22:20:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addTest7()[pri:0, instance:com.unitTestArithmetic.qa.testcases.SubtractFunctionTest@4f80542f]" started-at="2021-01-31T22:20:30 IST" name="addTest7" finished-at="2021-01-31T22:20:30 IST" duration-ms="1" status="PASS">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at com.unitTestArithmetic.qa.testcases.SubtractFunctionTest.addTest7(SubtractFunctionTest.java:63)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addTest7 -->
      </class> <!-- com.unitTestArithmetic.qa.testcases.SubtractFunctionTest -->
    </test> <!-- Unit Test Cases -->
  </suite> <!-- Unit Test Suite -->
</testng-results>
